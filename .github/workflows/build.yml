name: Build ImmortalWrt

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */2 * *'

jobs:
  list-configs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          echo "matrix=$(ls *.config | jq -Rsc 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    needs: list-configs
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "build-${{ github.run_id }}"
          name: "Auto Build ${{ github.run_id }}"
          body: "Automated build of ImmortalWrt firmware variants."
          draft: false
          prerelease: false

  build:
    needs: [list-configs, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: ${{ fromJson(needs.list-configs.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup build environment
        run: sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
      - name: Clone ImmortalWrt
        run: git clone --depth 1 -b master https://github.com/immortalwrt/immortalwrt.git
      - name: Prepare config and build
        run: |
          CONFIG_FILE="${{ matrix.config }}"
          AAA=$(echo "$CONFIG_FILE" | cut -d';' -f1)
          BBB=$(echo "$CONFIG_FILE" | cut -d';' -f2 | sed 's/\.config$//')
          
          cp "$CONFIG_FILE" immortalwrt/.config
          cd immortalwrt
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          #Run diy.sh if exists
          if [ -f ../diy.sh ]; then
            cp ../diy.sh ./
            bash ../diy.sh
          fi
          
          make defconfig
          make download -j$(nproc)
          make -j$(nproc)
          
          mkdir ../releases
          find bin/targets -type f \( -name "*.bin" -o -name "*.img" -o -name "*.img.gz" -o -name "*.squashfs" \) -exec bash -c 'cp "$0" ../releases/"$BBB"-$(basename "$0")' {} \;
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "build-${{ github.run_id }}"
          files: releases/*
